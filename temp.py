async def process_log_line(line, server):
    server_name = server["name"]

    try:
        if not line.strip():
            return

        if REGEX_MATCH_START.search(line):
            match_id = await start_match(server)
            logging.info(f"[{server_name}] –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–∞—á–∞–ª–æ –º–∞—Ç—á–∞ (ID: {match_id})")
            return

        if REGEX_MATCH_END.search(line):
            await end_match(server)
            logging.info(f"[{server_name}] –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –º–∞—Ç—á–∞")
            return

        if match := REGEX_CONNECT.search(line):
            steam_id = match.group(7)
            eos_id = match.group(6)
            player_name = match.group(5)  # –ò–∑–º–µ–Ω–µ–Ω–æ —Å group(5) –Ω–∞ group(3) –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏
            success = await add_player_to_match(server, steam_id, eos_id)
            if success:
                if success:
                    logging.debug(
                        f"[{server_name}] –ò–≥—Ä–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î: {player_name} (SteamID: {steam_id})")
                else:
                    logging.warning(
                        f"[{server_name}] –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ –ë–î: {player_name} (SteamID: {steam_id})")

        if match := REGEX_DISCONNECT.search(line):
            eos_id = match.group(1)
            await player_disconnect(server, eos_id)
            logging.debug(f"[{server_name}] –ò–≥—Ä–æ–∫ –æ—Ç–∫–ª—é—á–∏–ª—Å—è (EOS ID: {eos_id})")
            return

        if match := REGEX_WALLHACK.search(line):
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–≥–∞ –æ WallHack
            player = match.group("player")
            cheat = match.group("cheat")

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Discord
            message = (
                f"üö® **–û–±–Ω–∞—Ä—É–∂–µ–Ω —á–∏—Ç–µ—Ä!**\n"
                f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ: {server_name}\n"
                f"–ò–≥—Ä–æ–∫: `{player}`\n"
                f"–ß–∏—Ç: `{cheat}`"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è —á–∏—Ç–µ—Ä–æ–≤
            channel_id = server.get("discord_wallhack_channel_id")
            if channel_id:
                channel = bot.get_channel(channel_id)
                if channel:
                    await channel.send(message)
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ InfiniteAmmo
        if match := REGEX_INFINITEAMMO.search(line):
            current_time = datetime.now(timezone.utc)
            player = match.group("player")
            cheat = match.group("cheat")
            reporter = match.group("reporter")

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
            if server_name not in infinite_ammo_events:
                infinite_ammo_events[server_name] = []

            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
            infinite_ammo_events[server_name].append(current_time)

            # –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥
            time_threshold = current_time - timedelta(seconds=5)
            recent_events = [
                t for t in infinite_ammo_events[server_name]
                if t > time_threshold
            ]
            infinite_ammo_events[server_name] = recent_events  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä–æ–≥ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è (10 —Å–æ–±—ã—Ç–∏–π –∑–∞ 5 —Å–µ–∫—É–Ω–¥)
            if len(recent_events) >= 10:
                message = (
                    f"üî• **–ú–∞—Å—Å–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ InfiniteAmmo!**\n"
                    f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ: {server_name}\n"
                    f"–ò–≥—Ä–æ–∫: `{player}`\n"
                    f"–ß–∏—Ç: `{cheat}`\n"
                    f"–°–æ–æ–±—â–∏–ª: `{reporter}`\n"
                    f"–°–æ–±—ã—Ç–∏–π –∑–∞ 5 —Å–µ–∫: `{len(recent_events)}`"
                )
                channel_id = server.get("discord_infiniteammo_channel_id")
                if channel_id:
                    channel = bot.get_channel(channel_id)
                    if channel:
                        await channel.send(message)
                infinite_ammo_events[server_name].clear()  # –°–±—Ä–æ—Å –ø–æ—Å–ª–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Ç–µ—Ö–Ω–∏–∫—É
        if match := REGEX_VEHICLE.search(line):
            timestamp = datetime.now(timezone.utc).timestamp()
            player_name = match.group(2)
            steam_id = match.group(3)
            vehicle_type = match.group(4)

            # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á —Å–æ–±—ã—Ç–∏—è –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
            event_key = f"{steam_id}-{vehicle_type}-{int(timestamp // EVENT_COOLDOWN)}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
            if event_key in VEHICLE_EVENT_CACHE:
                logging.debug(f"–î—É–±–ª–∏–∫–∞—Ç —Å–æ–±—ã—Ç–∏—è: {event_key}")
                return

            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–µ—à
            VEHICLE_EVENT_CACHE.append(event_key)

            # –ü–æ–ª—É—á–∞–µ–º —á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏
            vehicle_name = vehicle_mapping.get(vehicle_type)
            if not vehicle_name:
                # –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                for key, value in vehicle_mapping.items():
                    if key in vehicle_type:
                        vehicle_name = value
                        break

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–µ—Ö–Ω–∏–∫–µ
            if vehicle_name:
                await send_vehicle_message(server, player_name, steam_id, vehicle_name)
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–±–∏–π—Å—Ç–≤
        if kill_match := REGEX_KILL.search(line):
            attacker_name = kill_match.group(1)
            steam_id = kill_match.group(2)
            weapon = kill_match.group(3)
            current_time = datetime.now(timezone.utc)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä—É–∂–∏–µ –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º
            is_rifle = False
            for weapon_pattern in RIFLE_WEAPONS.values():
                if weapon_pattern.fullmatch(weapon):
                    is_rifle = True
                    break
                elif weapon_pattern.search(weapon):
                    is_rifle = True
                    break

            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤–∏–Ω—Ç–æ–≤–∫–∞
            if not is_rifle:
                return

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç—Ä–µ–∫–µ—Ä —É–±–∏–π—Å—Ç–≤ –¥–ª—è –∏–≥—Ä–æ–∫–∞
            if 'rifle_kills' not in kill_tracker[steam_id]:
                kill_tracker[steam_id]['rifle_kills'] = deque()

            times = kill_tracker[steam_id]['rifle_kills']
            times.append(current_time)

            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (>2 —Å–µ–∫—É–Ω–¥)
            while times and (current_time - times[0]) > timedelta(seconds=2):
                times.popleft()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (5+ —É–±–∏–π—Å—Ç–≤ –∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã)
            if len(times) >= 5:
                await send_suspect_message(
                    server,
                    attacker_name,
                    steam_id,
                    weapon
                )
                times.clear()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫

    except ValueError as ve:
        logging.error(f"[{server_name}] –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {ve}")
    except KeyError as ke:
        logging.error(f"[{server_name}] –û—à–∏–±–∫–∞ –∫–ª—é—á–∞ –≤ –¥–∞–Ω–Ω—ã—Ö: {ke}")
    except Exception as e:
        logging.error(f"[{server_name}] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–æ–∫–∏: {e}")
