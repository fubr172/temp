YOUR_CHANNEL_ID = 1376903047556497528
# –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É –∏ View –¥–ª—è –∫–Ω–æ–ø–∫–∏
@bot.tree.command(name="vip_button", description="–ü–æ–ª—É—á–µ–Ω–∏—è VIP –Ω–∞ 3 –¥–Ω—è")
@app_commands.describe(steam_id="Steam ID –∏–≥—Ä–æ–∫–∞")
@command_logger_decorator
async def create_vip_button(interaction: discord.Interaction, steam_id: str):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ YOUR_CHANNEL_ID –Ω–∞ ID –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞)
    if interaction.channel_id != YOUR_CHANNEL_ID:
        await interaction.response.send_message("‚ùå –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ!",
                                                ephemeral=True)
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ SteamID
    if not re.match(STEAMID64_REGEX, steam_id):
        await interaction.response.send_message("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç SteamID!", ephemeral=True)
        return

    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    view = discord.ui.View(timeout=None)
    button = OneTimeVIPButton(steam_id=steam_id)
    view.add_item(button)

    await interaction.response.send_message(
        f"üéÆ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å VIP –Ω–∞ 3 –¥–Ω—è –¥–ª—è SteamID: `{steam_id}`",
        view=view
    )


# –ö–ª–∞—Å—Å –¥–ª—è –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ VIP
class OneTimeVIPButton(discord.ui.Button):
    def __init__(self, steam_id: str):
        super().__init__(
            style=discord.ButtonStyle.blurple,
            label="–ü–æ–ª—É—á–∏—Ç—å VIP –Ω–∞ 3 –¥–Ω—è",
            custom_id=f"vip_button_{steam_id}"
        )
        self.steam_id = steam_id
        self.clicked_users = set()

    async def callback(self, interaction: discord.Interaction):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ
        if interaction.user.id in self.clicked_users:
            await interaction.response.send_message("‚ùå –í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ VIP!", ephemeral=True)
            return
        self.clicked_users.add(interaction.user.id)

        # –í—ã–¥–∞—á–∞ VIP
        try:
            # –õ–æ–≥–∏–∫–∞ –≤—ã–¥–∞—á–∏ VIP (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ –∫–æ–º–∞–Ω–¥—ã add_vip)
            days = 3
            end_date = datetime.now() + timedelta(days=days)

            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Steam
            vip_data_steam = []
            for file_path in VM_FILE_PATHS:
                vip_data = load_vip_data(file_path)
                vip_data_steam.extend(vip_data)

            updated = False
            for i, entry in enumerate(vip_data_steam):
                match = re.match(ENTRY_REGEX, entry)
                if match and match.group(1) == self.steam_id:
                    vip_data_steam[i] = f"Admin={self.steam_id}:VIP // {end_date.strftime('%Y-%m-%d')}"
                    updated = True
                    break

            if not updated:
                vip_data_steam.append(f"Admin={self.steam_id}:VIP // {end_date.strftime('%Y-%m-%d')}")

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö
            for file_path in VM_FILE_PATHS:
                save_vip_data(vip_data_steam, file_path)

            # –î–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π
            self.disabled = True
            await interaction.response.edit_message(view=self.view)

            await interaction.followup.send(
                f"‚úÖ VIP –Ω–∞ 3 –¥–Ω—è –≤—ã–¥–∞–Ω –¥–ª—è SteamID: `{self.steam_id}`",
                ephemeral=True
            )

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            command_logger.info(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.name} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª VIP –¥–ª—è {self.steam_id}"
            )

        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –≤—ã–¥–∞—á–∏ VIP: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!", ephemeral=True)
